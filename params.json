{
  "name": "Pypong",
  "tagline": "A pong game in Tkinter",
  "body": "#Python Pong worksheet\r\n\r\n##Task 1 - The minimal tk canvas\r\n\r\nThe Pizza worksheet shows you how to make simple shapes, such as circles and rectangles, and shows you how to write functions that take parameters.\r\n\r\nRemember the steps in making a minimal  tk canvas:\r\n             \r\n```python\r\n        #import the libraries\r\n        #create a top level object\r\n        #attach a canvas\r\n        #draw something\r\n        #run the mainloop\r\n```\r\n\r\nSee if you can write your own; if you get really stuck, use the template from the Pizza worksheet.\r\n\r\n***\r\n\r\n##Task 2 - Make the ball move\r\n\r\nYou just need one extra step:\r\n* name the `something` and \r\n* make it move!\r\n\r\n```python\r\n# import libraries\r\nfrom Tkinter import * \r\n\r\n# create the top level Tk object\r\nwindow=Tk()\r\nwindow.title(\"a pong\")\r\n\r\n# create the canvas\r\ncanvas = Canvas(window, height=600, width=600)\r\n\r\n# draw stuff on the canvas\r\noval=canvas.create_oval(200,200,300,300,fill=\"brown\")\r\n\r\n# make it move\r\ndef move_oval(event=None):\r\n    canvas.move(oval, 10, 10)\r\n    canvas.after(100, move_oval)\r\n\r\nmove_oval()\r\n\r\n# pack the canvas and run the Tk mainloop\r\ncanvas.pack()\r\nwindow.mainloop()\r\n\r\n```\r\n\r\nThe `after()` function calls the named function after 100ms. Moving things is easy as that!\r\n\r\n***\r\n\r\n##Task 3 - Running and saving your work\r\n\r\nFiles and IDEs allow you to save your work, and let you run it at the press of a key.\r\n\r\nRemember to test and save your work after every change! If you are using Idle:\r\n\r\n* click `<F5>` at the top left - did you get what you expected?\r\n  * press this every time you want to see what your code does \r\n  * this should then appear in modal form labelled 'Tk'\r\n\r\n* click `<Cntl-S>` - saved locally, no URL this time :/\r\n  * the first time you will need to give a file name\r\n  * save the file to a memory stick if you need to transport it\r\n\r\n***\r\n\r\n##Task 4 - Making a paddle\r\n\r\nAs Elly said, it's just a rectangle, this time moving with a keybinding.\r\n\r\n```python\r\n# import libraries\r\nfrom Tkinter import * \r\n\r\n# create the top level Tk object\r\nwindow=Tk()\r\nwindow.title(\"a pong\")\r\n\r\n# create the canvas\r\ncanvas = Canvas(window, height=600, width=600)\r\n\r\n# draw stuff on the canvas\r\nrect=canvas.create_rectangle(100,100,150,200,fill=\"brown\")\r\n\r\n# make it move\r\ndef move_rect(event):\r\n    canvas.move(rect, 0, 10)\r\n\r\nwindow.bind(\"<Up>\", move_rect)\r\n\r\n# pack the canvas and run the Tk mainloop\r\ncanvas.pack()\r\nwindow.mainloop()\r\n\r\n```\r\n\r\nAll the keys on the keyboard can have keybindings; the special keys need `< >` the alphabetical keys are just in `\" \"`.\r\n\r\n***\r\n\r\n##Task 5 - What else does the Pong game need?\r\n\r\n* bounce the ball off the edge\r\n* move the paddle up & down\r\n* make a goal & score card\r\n* change the colours\r\n\r\n***\r\n\r\n##Task 6 - Can I make the ball bounce?\r\n\r\nBounces happen when things change direction, and go in the opposite direction with the same speed!\r\n\r\nSo, my ball needs to change direction when it gets to the edge - if on edge bounce - sounds familiar?\r\n\r\n```python\r\n\r\n# invariants\r\nc_height,c_width=350,350\r\nballx, bally=0, 0\r\nballdx, balldy=5, 5\r\n\r\ndef move_oval():\r\n    # 'global' needed to stop python making a new thing\r\n    # with the same name as the things outside\r\n    # other languages work other way.\r\n    # try removing these lines to see what happens.\r\n    global ballx,bally\r\n    global balldx,balldy\r\n\r\n    if ballx<10 or ballx>c_width:\r\n        balldx=-balldx\r\n\r\n    if bally<10 or bally>c_height:\r\n        balldy=-balldy\r\n\r\n    ballx+=balldx\r\n    bally+=balldy\r\n    canvas.move(oval,balldx,balldy)\r\n    canvas.after(100, move_oval)\r\n```\r\n\r\nLooks hard because I have to tell the computer ```exactly``` what to do.\r\n\r\nRemember to remove the globals to see what happens - we are here to learn, not just to get the right answer.\r\n\r\n***\r\n\r\n##Task 7 - Can I stop the bat moving at the edge?\r\n\r\nThis one is easy, only allow the bat to move if it hasn't got to the edge yet!\r\n\r\n```python\r\n# invariants\r\nbaty=0\r\n\r\nbat=canvas.create_rectangle(50,0,50,100)\r\n\r\ndef move_up(event):\r\n    # remember why we need 'global'\r\n    global baty\r\n    baty-=10\r\n    if baty>0:\r\n       canvas.move(bat,0,-10)\r\n\r\ndef move_down(event):\r\n    global baty\r\n    baty+=10\r\n    if bat<c_height-100:\r\n       canvas.move(bat,0,10)\r\n```\r\n\r\n##Task 8 - Make the rest of the board?\r\n\r\nWe already know how to make rectangles and lines!\r\n\r\nWe know how to make text boxes - we just need to change the values we show.\r\n\r\nRemember to make a scoring zone for the ball.\r\n\r\n\r\n***\r\n\r\n##Challenges\r\n\r\n* jsfiddle & material design colours!\r\n* an iPython notebook\r\n\r\n***\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}